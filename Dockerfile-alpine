#
# The builder step.
#
FROM alpine:3.16 AS builder

# Install all packages needed to build Kea.
RUN set -e && apk add --no-cache \
        ca-certificates \
        curl \
        gnupg \
    && apk add --no-cache \
        procps \
        file \
        g++ \
        make \
        boost-dev \
        openssl-dev \
        krb5-dev \
        log4cplus-dev \
        mariadb-dev \
        postgresql-dev

ARG KEA_VERSION
# Download and unpack the correct tarball (also verify the signature).
RUN curl -LOR "https://ftp.isc.org/isc/kea/${KEA_VERSION}/kea-${KEA_VERSION}.tar.gz{,.sha512.asc}" && \
    install -m 0700 -o root -g root -d /root/.gnupg && \
    gpg2 --no-options --verbose --keyid-format 0xlong --keyserver-options auto-key-retrieve=true \
        --verify kea-${KEA_VERSION}.tar.gz.sha512.asc kea-${KEA_VERSION}.tar.gz
# For some reason tar hangs if we do not do it in its own RUN...
# Investigate this later.
RUN tar xzpf kea-${KEA_VERSION}.tar.gz

# Set the extracted location as our new workdir.
WORKDIR /kea-${KEA_VERSION}

# Configure with all the settings we want, and then build it.
# This will take >7 hours for arm/v7 on an average 4 core desktop.
RUN ./configure --with-openssl --with-mysql --with-pgsql --with-gssapi && \
    make -j$(nproc) && \
    make install


#
# The common base step.
#
FROM alpine:3.16 AS base

# In Alpine the APK package installs the user "kea", with uid 100 and gid 101,
# and while I think it is stupid that the numbers are not identical it is the
# same as for the Bind9 package so let's keep it for consistency.
# Currently this does not make Kea run as this user, but we prepare for it.
ENV KEA_USER=kea
RUN addgroup -S -g 101 ${KEA_USER} && \
    adduser -S -D -G ${KEA_USER} -H -g "Kea user" -s /sbin/nologin -u 101 ${KEA_USER} && \
# We then need to install all the runtime dependencies of Kea.
# This is not identical to what is pulled in when doing an apk add of the
# official package, but it appears to work fine.
    apk add --no-cache \
        procps \
        file \
        boost \
        krb5-libs \
        log4cplus \
        mariadb-connector-c \
        libbz2 \
        libgcc \
        libstdc++ \
        libpq \
        libssl1.1 \
    && \
# Make sure some directories mentioned in the documentation are present and
# owned by the Kea user.
    install -m 0775 -o ${KEA_USER} -g ${KEA_USER} -d \
        /opt/kea \
        /usr/local/var/log/kea \
        /usr/local/var/lib/kea \
        /usr/local/var/run/kea \
    && \
# Create directories we want available for easy configuration management.
    install -m 0775 -o ${KEA_USER} -g ${KEA_USER} -d \
          /kea \
          /kea/config \
          /kea/leases \
          /kea/logs \
          /kea/sockets \
    && \
    mkdir /entrypoint.d

# From the build stage we copy the library files from "lib", and then all the
# C++ header files in the "include" folder. There are a couple of folders used
# during runtime in "var" as well, but we created them above with the Kea user
# as the owner instead.
COPY --from=builder /usr/local/lib /usr/local/lib
COPY --from=builder /usr/local/include/kea /usr/local/include/kea

# As a final step we will need to run ldconfig to make sure that all the Kea
# libraries that we copied are correctly linked.
# The ldconfig program in Alpine is weird in that it requires a path as
# argument, else it exits with code 1, but I cannot find info about that this
# path should point to so I just use the folder we want added.
RUN echo "/lib:/usr/local/lib:/usr/lib:/usr/local/lib/kea/hooks" > "/etc/ld-musl-$(uname -m).path" && \
    ldconfig /usr/local/lib/kea/hooks

# Finally we copy the common entrypoint script which will read an environment
# variable in order to later launch the correct service.
COPY entrypoint.sh /
ENTRYPOINT [ "/entrypoint.sh" ]




#
# The DHCP4 service image.
#
FROM base AS dhcp4-target
ENV KEA_EXECUTABLE=dhcp4
COPY --from=builder /usr/local/sbin/kea-dhcp4 /usr/local/sbin/kea-lfc /usr/local/sbin/


#
# The DHCP6 service image.
#
FROM base AS dhcp6-target
ENV KEA_EXECUTABLE=dhcp6
COPY --from=builder /usr/local/sbin/kea-dhcp6 /usr/local/sbin/kea-lfc /usr/local/sbin/


#
# The Kea Control Agent service image.
#
FROM base AS ctrl-agent-target
ENV KEA_EXECUTABLE=ctrl-agent
COPY --from=builder /usr/local/sbin/kea-ctrl-agent /usr/local/sbin/
